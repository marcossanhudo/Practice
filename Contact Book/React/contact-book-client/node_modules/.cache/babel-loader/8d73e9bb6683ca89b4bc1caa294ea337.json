{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\msanh\\\\Programming\\\\Practice\\\\Contact Book\\\\React\\\\contact-book-client\\\\src\\\\Pages\\\\List\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport Contacts from \"./test\";\nimport { ContactChip, Button, EditableContactChip } from \"../../Components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledList = () => {\n  _s();\n  const [contacts, setContacts] = useState({});\n  useEffect(() => {\n    const fetchContacts = async () => await setContacts(Contacts);\n    fetchContacts();\n  }, []);\n  const [newContact, setNewContact] = useState(false);\n  const handleAddContact = () => {\n    setNewContact(true);\n  };\n  const finishAddingContact = inputData => {\n    let aux = [];\n    contacts.forEach(contact => {\n      aux.push(contact);\n    });\n    aux.push(inputData);\n    setContacts(aux);\n    setNewContact(false);\n    console.log(contacts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAddContact,\n      text: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ContactList\",\n      children: [newContact && /*#__PURE__*/_jsxDEV(EditableContactChip, {\n        onSave: () => finishAddingContact(),\n        onCancel: () => setNewContact(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 6\n      }, this), Contacts.map(contact => {\n        return /*#__PURE__*/_jsxDEV(ContactChip, {\n          contact: contact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_s(StyledList, \"goFM5n4IcYpv4I/pdo6DN9bekTE=\");\n_c = StyledList;\nexport { StyledList };\nvar _c;\n$RefreshReg$(_c, \"StyledList\");","map":{"version":3,"names":["React","useState","useEffect","Contacts","ContactChip","Button","EditableContactChip","StyledList","contacts","setContacts","fetchContacts","newContact","setNewContact","handleAddContact","finishAddingContact","inputData","aux","forEach","contact","push","console","log","map"],"sources":["C:/Users/msanh/Programming/Practice/Contact Book/React/contact-book-client/src/Pages/List/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport \"./styles.css\"\r\nimport Contacts from \"./test\"\r\nimport { ContactChip, Button, EditableContactChip } from \"../../Components\"\r\n\r\nconst StyledList = () => {\r\n\r\n\tconst [contacts, setContacts] = useState({})\r\n\tuseEffect(() => {\r\n\t\tconst fetchContacts = async () => await setContacts(Contacts)\r\n\t\tfetchContacts()\r\n\t}, [])\r\n\r\n\tconst [newContact, setNewContact] = useState(false)\r\n\tconst handleAddContact = () => {\r\n\t\tsetNewContact(true)\r\n\t}\r\n\tconst finishAddingContact = (inputData) => {\r\n\t\tlet aux = []\r\n\t\tcontacts.forEach(contact => {\r\n\t\t\taux.push(contact)\r\n\t\t})\r\n\t\taux.push(inputData)\r\n\t\tsetContacts(aux)\r\n\t\tsetNewContact(false)\r\n\t\tconsole.log(contacts)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className=\"List\">\r\n\t\t\t<h1>Your Contacts</h1>\r\n\t\t\t<Button\r\n\t\t\t\tonClick={ handleAddContact }\r\n\t\t\t\ttext={ \"Add contact\" } />\r\n\t\t\t<div className=\"ContactList\">{\r\n\t\t\t\tnewContact &&\r\n\t\t\t\t\t<EditableContactChip\r\n\t\t\t\t\t\tonSave={ () => finishAddingContact() }\r\n\t\t\t\t\t\tonCancel={ () => setNewContact(false) } />\r\n\t\t\t}{\r\n\t\t\t\tContacts.map((contact) => {\r\n\t\t\t\t\treturn <ContactChip contact={ contact } />\r\n\t\t\t\t}) \r\n\t\t\t}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport { StyledList }"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AACrB,OAAOC,QAAQ,MAAM,QAAQ;AAC7B,SAASC,WAAW,EAAEC,MAAM,EAAEC,mBAAmB,QAAQ,kBAAkB;AAAA;AAE3E,MAAMC,UAAU,GAAG,MAAM;EAAA;EAExB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5CC,SAAS,CAAC,MAAM;IACf,MAAMQ,aAAa,GAAG,YAAY,MAAMD,WAAW,CAACN,QAAQ,CAAC;IAC7DO,aAAa,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMY,gBAAgB,GAAG,MAAM;IAC9BD,aAAa,CAAC,IAAI,CAAC;EACpB,CAAC;EACD,MAAME,mBAAmB,GAAIC,SAAS,IAAK;IAC1C,IAAIC,GAAG,GAAG,EAAE;IACZR,QAAQ,CAACS,OAAO,CAACC,OAAO,IAAI;MAC3BF,GAAG,CAACG,IAAI,CAACD,OAAO,CAAC;IAClB,CAAC,CAAC;IACFF,GAAG,CAACG,IAAI,CAACJ,SAAS,CAAC;IACnBN,WAAW,CAACO,GAAG,CAAC;IAChBJ,aAAa,CAAC,KAAK,CAAC;IACpBQ,OAAO,CAACC,GAAG,CAACb,QAAQ,CAAC;EACtB,CAAC;EAED,oBACC;IAAK,SAAS,EAAC,MAAM;IAAA,wBACpB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eACtB,QAAC,MAAM;MACN,OAAO,EAAGK,gBAAkB;MAC5B,IAAI,EAAG;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1B;MAAK,SAAS,EAAC,aAAa;MAAA,WAC3BF,UAAU,iBACT,QAAC,mBAAmB;QACnB,MAAM,EAAG,MAAMG,mBAAmB,EAAI;QACtC,QAAQ,EAAG,MAAMF,aAAa,CAAC,KAAK;MAAG;QAAA;QAAA;QAAA;MAAA,QAAG,EAE5CT,QAAQ,CAACmB,GAAG,CAAEJ,OAAO,IAAK;QACzB,oBAAO,QAAC,WAAW;UAAC,OAAO,EAAGA;QAAS;UAAA;UAAA;UAAA;QAAA,QAAG;MAC3C,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACI;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAER,CAAC;AAAA,GAzCKX,UAAU;AAAA,KAAVA,UAAU;AA2ChB,SAASA,UAAU;AAAE;AAAA"},"metadata":{},"sourceType":"module"}